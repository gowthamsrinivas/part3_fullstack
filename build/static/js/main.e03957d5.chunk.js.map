{"version":3,"sources":["Components/Search.js","Components/PersonForm.js","Components/PersonsList.js","Components/Header.js","Components/Notification.js","Services/notes.js","App.js","index.js"],"names":["Search","handleChange","value","console","log","onChange","PersonForm","newName","newNumber","nameChange","numberChange","addName","onSubmit","type","PersonsList","personsToShow","handleDelete","length","map","person","name","number","onClick","id","Header","text","Notification","message","state","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useEffect","personsService","setPersons","useState","persons","setNewName","setNewNumber","searchValue","setSearchValue","setMessage","setState","filter","slice","toLowerCase","event","target","preventDefault","index","indexOf","window","confirm","newObj","catch","error","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e03957d5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Search = ({handleChange,value}) => {\n    console.log(\"rendered search\");\n    return(\n        <div>\n        filter shown with:<input value={value} onChange={handleChange}/>\n      </div>\n    )\n}\n\nexport default Search;","import React from 'react';\n\nconst PersonForm = ({newName,newNumber,nameChange,numberChange,addName}) => {\n    console.log(\"rendered person from\");\n    return(\n        <form onSubmit={addName}>\n            <div>\n                Name: <input value={newName} onChange={nameChange}/>\n            </div>\n            <div>\n                Number: <input value={newNumber} onChange={numberChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst PersonsList = ({personsToShow,handleDelete}) => {\n    return (\n        <>\n        {\n            personsToShow.length ? personsToShow.map(person => {\n                return(\n                <p key={person.id}>\n                    {person.name} {person.number}\n                    <button onClick={()=>handleDelete(person)}>\n                        delete\n                    </button>\n                </p>\n                )\n            }):''\n        }\n        </>\n    );\n}\n\nexport default PersonsList;","import React from 'react';\n\nconst Header = ({text}) => (\n    <h1>\n        {text}\n    </h1>\n);\n\nexport default Header;","import React from 'react';\n\nconst Notification = ({message,state}) => {\n    return (\n        <div className={state}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data);\n  }\n\nexport default { \n  getAll, \n  create, \n  update,\n  deletePerson \n}","import React, { useState,useEffect } from 'react';\nimport Search from './Components/Search';\nimport PersonForm from './Components/PersonForm';\nimport PersonsList from './Components/PersonsList';\nimport Header from './Components/Header';\nimport Notification from './Components/Notification';\nimport personsService from './Services/notes';\n\nconst App = () => {\n  useEffect(() => {\n    personsService\n        .getAll()\n        .then(response => {\n          setPersons(response);\n          \n        })\n  },[]);\n\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ searchValue, setSearchValue ] = useState('');\n  const [message,setMessage] = useState('');\n  const [state,setState] = useState('');\n\n\n  const nameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const numberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const personsToShow = searchValue ? persons.filter(person =>  {\n    return person.name.slice(0,searchValue.length).toLowerCase() === searchValue;\n  }): persons;\n\n  const searchContent = (event) => {\n    setSearchValue(event.target.value);  \n  }\n  \n  const addName = (event) => {\n    event.preventDefault();\n    let index = persons.map(person => {\n      return person.name;\n    }).indexOf(newName);\n\n    if(index > -1) {\n      let proceed = window.confirm(`${newName} is already added into phonebook,replace the older one with a new one?`);\n      if(proceed) {\n        let newObj = {\n          name: newName,\n          number: newNumber\n        }\n        personsService\n          .update(persons[index].id,newObj)\n          .then(response => {\n            setPersons(persons.map(person => {\n              return (person.name === newName ? response : person);\n            }))\n          })\n          .catch((error) => {\n            setMessage(`${newName} has already been removed from server`);\n            setState('error');\n            setTimeout(()=> {\n              setMessage('');\n              setState('');\n            },5000);\n          });\n      }\n    }\n    else {\n      const newObj = {\n        name: newName,\n        number: newNumber\n      };\n      personsService.create(newObj)\n        .then((response) => {\n          setPersons(persons.concat(response));\n          setMessage(`Added ${response.name} successfully`);\n          setState('success');\n          setTimeout(()=> {\n            setMessage('');\n            setState('');\n          },5000);\n        })\n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const deletePerson = ({name,id}) => {\n    if(window.confirm(`Delete ${name}`)) {\n      personsService\n        .deletePerson(id)\n        .then(() => {\n            setPersons(persons.filter(person => {\n              return person.name !== name;\n            }));\n        })\n    }\n      \n  }\n\n  return (\n    <div>\n      <Header text=\"Phonebook\"/>\n      <Notification message={message} state={state}/>\n      <Search value={searchValue} handleChange={searchContent}/>\n      <Header text=\"add a new\"/>\n      <PersonForm newName={newName} newNumber={newNumber} nameChange={nameChange} numberChange={numberChange} addName={addName}/>\n      <Header text=\"Numbers\"/>\n      <PersonsList personsToShow={personsToShow} handleDelete={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}